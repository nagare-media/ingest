#!/bin/bash

# Copyright 2022-2025 The nagare media authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Validation

[ -n "${IMAGE}" ]          || fatal "mandatory variable \$IMAGE is empty"
[ -n "${IMAGE_REGISTRY}" ] || fatal "mandatory variable \$IMAGE_REGISTRY is empty"
[ -n "${IMAGE_TAG}" ]      || fatal "mandatory variable \$IMAGE_TAG is empty"
[ -n "${GOVERSION}" ]      || fatal "mandatory variable \$GOVERSION is empty"
[ -n "${VERSION}" ]        || fatal "mandatory variable \$VERSION is empty"
[ -n "${GIT_COMMIT}" ]     || fatal "mandatory variable \$GIT_COMMIT is empty"
[ -n "${GIT_TREE_STATE}" ] || fatal "mandatory variable \$GIT_TREE_STATE is empty"
[ -n "${BUILD_DATE}" ]     || fatal "mandatory variable \$BUILD_DATE is empty"
[ -n "${BUILDX_OUTPUT}" ]  || fatal "mandatory variable \$BUILDX_OUTPUT is empty"

# Variables

if [ -n "${PLATFORMS}" ]; then
  DOCKERFILE="build/package/image/${IMAGE}/Dockerfile.generic.generic"
  BUILDX_PLATFORMS="${PLATFORMS}"
else
  [ -n "${OS}" ]   || fatal "mandatory variable \$OS is empty; alternativly set \$PLATFORMS"
  [ -n "${ARCH}" ] || fatal "mandatory variable \$ARCH is empty; alternativly set \$PLATFORMS"
  DOCKERFILE="build/package/image/${IMAGE}/Dockerfile.${OS}.${ARCH}"
  BUILDX_PLATFORMS="${OS}/${ARCH}"
fi

[ -e "${DOCKERFILE}" ] || fatal "selected platform is unsupported"

# Main

docker buildx build \
  ${BUILDX_OUTPUT} \
  --platform "${BUILDX_PLATFORMS}" \
  --build-arg "GOVERSION=${GOVERSION}" \
  --build-arg "VERSION=${VERSION}" \
  --build-arg "GIT_COMMIT=${GIT_COMMIT}" \
  --build-arg "GIT_TREE_STATE=${GIT_TREE_STATE}" \
  --build-arg "BUILD_DATE=${BUILD_DATE}" \
  -f "${DOCKERFILE}" \
  -t "${IMAGE_REGISTRY}/${IMAGE}:${IMAGE_TAG}" \
  "${ROOT_DIR}"
